{"ast":null,"code":"import { a as alchemyRpcUrls, p as publicRpcUrls, i as infuraRpcUrls } from './rpcs-b73a8f60.esm.js';\nconst etherscanBlockExplorers = {\n  mainnet: {\n    name: 'Etherscan',\n    url: 'https://etherscan.io'\n  },\n  ropsten: {\n    name: 'Etherscan',\n    url: 'https://ropsten.etherscan.io'\n  },\n  rinkeby: {\n    name: 'Etherscan',\n    url: 'https://rinkeby.etherscan.io'\n  },\n  goerli: {\n    name: 'Etherscan',\n    url: 'https://goerli.etherscan.io'\n  },\n  kovan: {\n    name: 'Etherscan',\n    url: 'https://kovan.etherscan.io'\n  },\n  optimism: {\n    name: 'Etherscan',\n    url: 'https://optimistic.etherscan.io'\n  },\n  optimismKovan: {\n    name: 'Etherscan',\n    url: 'https://kovan-optimistic.etherscan.io'\n  },\n  polygon: {\n    name: 'PolygonScan',\n    url: 'https://polygonscan.com'\n  },\n  polygonMumbai: {\n    name: 'PolygonScan',\n    url: 'https://mumbai.polygonscan.com'\n  },\n  arbitrum: {\n    name: 'Arbiscan',\n    url: 'https://arbiscan.io'\n  },\n  arbitrumRinkeby: {\n    name: 'Arbiscan',\n    url: 'https://testnet.arbiscan.io'\n  }\n};\nconst chainId = {\n  mainnet: 1,\n  ropsten: 3,\n  rinkeby: 4,\n  goerli: 5,\n  kovan: 42,\n  optimism: 10,\n  optimismKovan: 69,\n  polygon: 137,\n  polygonMumbai: 80001,\n  arbitrum: 42161,\n  arbitrumRinkeby: 421611,\n  localhost: 1337,\n  hardhat: 31337,\n  foundry: 31337\n};\nconst mainnet = {\n  id: chainId.mainnet,\n  name: 'Ethereum',\n  network: 'homestead',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.mainnet,\n    default: publicRpcUrls.mainnet,\n    infura: infuraRpcUrls.mainnet,\n    public: publicRpcUrls.mainnet\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.mainnet,\n    default: etherscanBlockExplorers.mainnet\n  },\n  ens: {\n    address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 14353601\n  }\n};\nconst ropsten = {\n  id: chainId.ropsten,\n  name: 'Ropsten',\n  network: 'ropsten',\n  nativeCurrency: {\n    name: 'Ropsten Ether',\n    symbol: 'ROP',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.ropsten,\n    default: publicRpcUrls.ropsten,\n    infura: infuraRpcUrls.ropsten,\n    public: publicRpcUrls.ropsten\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.ropsten,\n    default: etherscanBlockExplorers.ropsten\n  },\n  ens: {\n    address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 12063863\n  },\n  testnet: true\n};\nconst rinkeby = {\n  id: chainId.rinkeby,\n  name: 'Rinkeby',\n  network: 'rinkeby',\n  nativeCurrency: {\n    name: 'Rinkeby Ether',\n    symbol: 'RIN',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.rinkeby,\n    default: publicRpcUrls.rinkeby,\n    infura: infuraRpcUrls.rinkeby,\n    public: publicRpcUrls.rinkeby\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.rinkeby,\n    default: etherscanBlockExplorers.rinkeby\n  },\n  ens: {\n    address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 10299530\n  },\n  testnet: true\n};\nconst goerli = {\n  id: chainId.goerli,\n  name: 'Goerli',\n  network: 'goerli',\n  nativeCurrency: {\n    name: 'Goerli Ether',\n    symbol: 'GOR',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.goerli,\n    default: publicRpcUrls.goerli,\n    infura: infuraRpcUrls.goerli,\n    public: publicRpcUrls.goerli\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.goerli,\n    default: etherscanBlockExplorers.goerli\n  },\n  ens: {\n    address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 6507670\n  },\n  testnet: true\n};\nconst kovan = {\n  id: chainId.kovan,\n  name: 'Kovan',\n  network: 'kovan',\n  nativeCurrency: {\n    name: 'Kovan Ether',\n    symbol: 'KOV',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.kovan,\n    default: publicRpcUrls.kovan,\n    infura: infuraRpcUrls.kovan,\n    public: publicRpcUrls.kovan\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.kovan,\n    default: etherscanBlockExplorers.kovan\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 30285908\n  },\n  testnet: true\n};\nconst optimism = {\n  id: chainId.optimism,\n  name: 'Optimism',\n  network: 'optimism',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.optimism,\n    default: publicRpcUrls.optimism,\n    infura: infuraRpcUrls.optimism,\n    public: publicRpcUrls.optimism\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.optimism,\n    default: etherscanBlockExplorers.optimism\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 4286263\n  }\n};\nconst optimismKovan = {\n  id: chainId.optimismKovan,\n  name: 'Optimism Kovan',\n  network: 'optimism-kovan',\n  nativeCurrency: {\n    name: 'Kovan Ether',\n    symbol: 'KOR',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.optimismKovan,\n    default: publicRpcUrls.optimismKovan,\n    infura: infuraRpcUrls.optimismKovan,\n    public: publicRpcUrls.optimismKovan\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.optimismKovan,\n    default: etherscanBlockExplorers.optimismKovan\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 1418387\n  },\n  testnet: true\n};\nconst polygon = {\n  id: chainId.polygon,\n  name: 'Polygon',\n  network: 'matic',\n  nativeCurrency: {\n    name: 'MATIC',\n    symbol: 'MATIC',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.polygon,\n    default: publicRpcUrls.polygon,\n    infura: infuraRpcUrls.polygon,\n    public: publicRpcUrls.polygon\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.polygon,\n    default: etherscanBlockExplorers.polygon\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 25770160\n  }\n};\nconst polygonMumbai = {\n  id: chainId.polygonMumbai,\n  name: 'Polygon Mumbai',\n  network: 'maticmum',\n  nativeCurrency: {\n    name: 'MATIC',\n    symbol: 'MATIC',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.polygonMumbai,\n    default: publicRpcUrls.polygonMumbai,\n    infura: infuraRpcUrls.polygonMumbai,\n    public: publicRpcUrls.polygonMumbai\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.polygonMumbai,\n    default: etherscanBlockExplorers.polygonMumbai\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 25444704\n  },\n  testnet: true\n};\nconst arbitrum = {\n  id: chainId.arbitrum,\n  name: 'Arbitrum One',\n  network: 'arbitrum',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.arbitrum,\n    default: publicRpcUrls.arbitrum,\n    infura: infuraRpcUrls.arbitrum,\n    public: publicRpcUrls.arbitrum\n  },\n  blockExplorers: {\n    arbitrum: {\n      name: 'Arbitrum Explorer',\n      url: 'https://explorer.arbitrum.io'\n    },\n    etherscan: etherscanBlockExplorers.arbitrum,\n    default: etherscanBlockExplorers.arbitrum\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 7654707\n  }\n};\nconst arbitrumRinkeby = {\n  id: chainId.arbitrumRinkeby,\n  name: 'Arbitrum Rinkeby',\n  network: 'arbitrum-rinkeby',\n  nativeCurrency: {\n    name: 'Arbitrum Rinkeby Ether',\n    symbol: 'ARETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.arbitrumRinkeby,\n    default: publicRpcUrls.arbitrumRinkeby,\n    infura: infuraRpcUrls.arbitrumRinkeby,\n    public: publicRpcUrls.arbitrumRinkeby\n  },\n  blockExplorers: {\n    arbitrum: {\n      name: 'Arbitrum Explorer',\n      url: 'https://rinkeby-explorer.arbitrum.io'\n    },\n    etherscan: etherscanBlockExplorers.arbitrumRinkeby,\n    default: etherscanBlockExplorers.arbitrumRinkeby\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 10228837\n  },\n  testnet: true\n};\nconst localhost = {\n  id: chainId.localhost,\n  name: 'Localhost',\n  network: 'localhost',\n  rpcUrls: {\n    default: 'http://127.0.0.1:8545'\n  }\n};\nconst hardhat = {\n  id: chainId.hardhat,\n  name: 'Hardhat',\n  network: 'hardhat',\n  rpcUrls: {\n    default: 'http://127.0.0.1:8545'\n  }\n};\nconst foundry = {\n  id: chainId.hardhat,\n  name: 'Foundry',\n  network: 'foundry',\n  rpcUrls: {\n    default: 'http://127.0.0.1:8545'\n  }\n};\n/**\n * Common chains for convenience\n * Should not contain all possible chains\n */\n\nconst chain = {\n  mainnet,\n  ropsten,\n  rinkeby,\n  goerli,\n  kovan,\n  optimism,\n  optimismKovan,\n  polygon,\n  polygonMumbai,\n  arbitrum,\n  arbitrumRinkeby,\n  localhost,\n  hardhat,\n  foundry\n};\nconst allChains = Object.values(chain);\nconst defaultChains = [chain.mainnet, chain.ropsten, chain.rinkeby, chain.goerli, chain.kovan];\nconst defaultL2Chains = [chain.arbitrum, chain.arbitrumRinkeby, chain.optimism, chain.optimismKovan];\nexport { allChains as a, chainId as b, chain as c, defaultChains as d, defaultL2Chains as e, etherscanBlockExplorers as f, arbitrum as g, arbitrumRinkeby as h, foundry as i, goerli as j, hardhat as k, kovan as l, localhost as m, mainnet as n, optimism as o, optimismKovan as p, polygon as q, polygonMumbai as r, rinkeby as s, ropsten as t };","map":{"version":3,"names":["a","alchemyRpcUrls","p","publicRpcUrls","i","infuraRpcUrls","etherscanBlockExplorers","mainnet","name","url","ropsten","rinkeby","goerli","kovan","optimism","optimismKovan","polygon","polygonMumbai","arbitrum","arbitrumRinkeby","chainId","localhost","hardhat","foundry","id","network","nativeCurrency","symbol","decimals","rpcUrls","alchemy","default","infura","public","blockExplorers","etherscan","ens","address","multicall","blockCreated","testnet","chain","allChains","Object","values","defaultChains","defaultL2Chains","b","c","d","e","f","g","h","j","k","l","m","n","o","q","r","s","t"],"sources":["/Users/matt/Desktop/crypto/playground/social/node_modules/@wagmi/core/dist/chains-c389721d.esm.js"],"sourcesContent":["import { a as alchemyRpcUrls, p as publicRpcUrls, i as infuraRpcUrls } from './rpcs-b73a8f60.esm.js';\n\nconst etherscanBlockExplorers = {\n  mainnet: {\n    name: 'Etherscan',\n    url: 'https://etherscan.io'\n  },\n  ropsten: {\n    name: 'Etherscan',\n    url: 'https://ropsten.etherscan.io'\n  },\n  rinkeby: {\n    name: 'Etherscan',\n    url: 'https://rinkeby.etherscan.io'\n  },\n  goerli: {\n    name: 'Etherscan',\n    url: 'https://goerli.etherscan.io'\n  },\n  kovan: {\n    name: 'Etherscan',\n    url: 'https://kovan.etherscan.io'\n  },\n  optimism: {\n    name: 'Etherscan',\n    url: 'https://optimistic.etherscan.io'\n  },\n  optimismKovan: {\n    name: 'Etherscan',\n    url: 'https://kovan-optimistic.etherscan.io'\n  },\n  polygon: {\n    name: 'PolygonScan',\n    url: 'https://polygonscan.com'\n  },\n  polygonMumbai: {\n    name: 'PolygonScan',\n    url: 'https://mumbai.polygonscan.com'\n  },\n  arbitrum: {\n    name: 'Arbiscan',\n    url: 'https://arbiscan.io'\n  },\n  arbitrumRinkeby: {\n    name: 'Arbiscan',\n    url: 'https://testnet.arbiscan.io'\n  }\n};\n\nconst chainId = {\n  mainnet: 1,\n  ropsten: 3,\n  rinkeby: 4,\n  goerli: 5,\n  kovan: 42,\n  optimism: 10,\n  optimismKovan: 69,\n  polygon: 137,\n  polygonMumbai: 80001,\n  arbitrum: 42161,\n  arbitrumRinkeby: 421611,\n  localhost: 1337,\n  hardhat: 31337,\n  foundry: 31337\n};\nconst mainnet = {\n  id: chainId.mainnet,\n  name: 'Ethereum',\n  network: 'homestead',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.mainnet,\n    default: publicRpcUrls.mainnet,\n    infura: infuraRpcUrls.mainnet,\n    public: publicRpcUrls.mainnet\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.mainnet,\n    default: etherscanBlockExplorers.mainnet\n  },\n  ens: {\n    address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 14353601\n  }\n};\nconst ropsten = {\n  id: chainId.ropsten,\n  name: 'Ropsten',\n  network: 'ropsten',\n  nativeCurrency: {\n    name: 'Ropsten Ether',\n    symbol: 'ROP',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.ropsten,\n    default: publicRpcUrls.ropsten,\n    infura: infuraRpcUrls.ropsten,\n    public: publicRpcUrls.ropsten\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.ropsten,\n    default: etherscanBlockExplorers.ropsten\n  },\n  ens: {\n    address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 12063863\n  },\n  testnet: true\n};\nconst rinkeby = {\n  id: chainId.rinkeby,\n  name: 'Rinkeby',\n  network: 'rinkeby',\n  nativeCurrency: {\n    name: 'Rinkeby Ether',\n    symbol: 'RIN',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.rinkeby,\n    default: publicRpcUrls.rinkeby,\n    infura: infuraRpcUrls.rinkeby,\n    public: publicRpcUrls.rinkeby\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.rinkeby,\n    default: etherscanBlockExplorers.rinkeby\n  },\n  ens: {\n    address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 10299530\n  },\n  testnet: true\n};\nconst goerli = {\n  id: chainId.goerli,\n  name: 'Goerli',\n  network: 'goerli',\n  nativeCurrency: {\n    name: 'Goerli Ether',\n    symbol: 'GOR',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.goerli,\n    default: publicRpcUrls.goerli,\n    infura: infuraRpcUrls.goerli,\n    public: publicRpcUrls.goerli\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.goerli,\n    default: etherscanBlockExplorers.goerli\n  },\n  ens: {\n    address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 6507670\n  },\n  testnet: true\n};\nconst kovan = {\n  id: chainId.kovan,\n  name: 'Kovan',\n  network: 'kovan',\n  nativeCurrency: {\n    name: 'Kovan Ether',\n    symbol: 'KOV',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.kovan,\n    default: publicRpcUrls.kovan,\n    infura: infuraRpcUrls.kovan,\n    public: publicRpcUrls.kovan\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.kovan,\n    default: etherscanBlockExplorers.kovan\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 30285908\n  },\n  testnet: true\n};\nconst optimism = {\n  id: chainId.optimism,\n  name: 'Optimism',\n  network: 'optimism',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.optimism,\n    default: publicRpcUrls.optimism,\n    infura: infuraRpcUrls.optimism,\n    public: publicRpcUrls.optimism\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.optimism,\n    default: etherscanBlockExplorers.optimism\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 4286263\n  }\n};\nconst optimismKovan = {\n  id: chainId.optimismKovan,\n  name: 'Optimism Kovan',\n  network: 'optimism-kovan',\n  nativeCurrency: {\n    name: 'Kovan Ether',\n    symbol: 'KOR',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.optimismKovan,\n    default: publicRpcUrls.optimismKovan,\n    infura: infuraRpcUrls.optimismKovan,\n    public: publicRpcUrls.optimismKovan\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.optimismKovan,\n    default: etherscanBlockExplorers.optimismKovan\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 1418387\n  },\n  testnet: true\n};\nconst polygon = {\n  id: chainId.polygon,\n  name: 'Polygon',\n  network: 'matic',\n  nativeCurrency: {\n    name: 'MATIC',\n    symbol: 'MATIC',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.polygon,\n    default: publicRpcUrls.polygon,\n    infura: infuraRpcUrls.polygon,\n    public: publicRpcUrls.polygon\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.polygon,\n    default: etherscanBlockExplorers.polygon\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 25770160\n  }\n};\nconst polygonMumbai = {\n  id: chainId.polygonMumbai,\n  name: 'Polygon Mumbai',\n  network: 'maticmum',\n  nativeCurrency: {\n    name: 'MATIC',\n    symbol: 'MATIC',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.polygonMumbai,\n    default: publicRpcUrls.polygonMumbai,\n    infura: infuraRpcUrls.polygonMumbai,\n    public: publicRpcUrls.polygonMumbai\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.polygonMumbai,\n    default: etherscanBlockExplorers.polygonMumbai\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 25444704\n  },\n  testnet: true\n};\nconst arbitrum = {\n  id: chainId.arbitrum,\n  name: 'Arbitrum One',\n  network: 'arbitrum',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.arbitrum,\n    default: publicRpcUrls.arbitrum,\n    infura: infuraRpcUrls.arbitrum,\n    public: publicRpcUrls.arbitrum\n  },\n  blockExplorers: {\n    arbitrum: {\n      name: 'Arbitrum Explorer',\n      url: 'https://explorer.arbitrum.io'\n    },\n    etherscan: etherscanBlockExplorers.arbitrum,\n    default: etherscanBlockExplorers.arbitrum\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 7654707\n  }\n};\nconst arbitrumRinkeby = {\n  id: chainId.arbitrumRinkeby,\n  name: 'Arbitrum Rinkeby',\n  network: 'arbitrum-rinkeby',\n  nativeCurrency: {\n    name: 'Arbitrum Rinkeby Ether',\n    symbol: 'ARETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.arbitrumRinkeby,\n    default: publicRpcUrls.arbitrumRinkeby,\n    infura: infuraRpcUrls.arbitrumRinkeby,\n    public: publicRpcUrls.arbitrumRinkeby\n  },\n  blockExplorers: {\n    arbitrum: {\n      name: 'Arbitrum Explorer',\n      url: 'https://rinkeby-explorer.arbitrum.io'\n    },\n    etherscan: etherscanBlockExplorers.arbitrumRinkeby,\n    default: etherscanBlockExplorers.arbitrumRinkeby\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 10228837\n  },\n  testnet: true\n};\nconst localhost = {\n  id: chainId.localhost,\n  name: 'Localhost',\n  network: 'localhost',\n  rpcUrls: {\n    default: 'http://127.0.0.1:8545'\n  }\n};\nconst hardhat = {\n  id: chainId.hardhat,\n  name: 'Hardhat',\n  network: 'hardhat',\n  rpcUrls: {\n    default: 'http://127.0.0.1:8545'\n  }\n};\nconst foundry = {\n  id: chainId.hardhat,\n  name: 'Foundry',\n  network: 'foundry',\n  rpcUrls: {\n    default: 'http://127.0.0.1:8545'\n  }\n};\n/**\n * Common chains for convenience\n * Should not contain all possible chains\n */\n\nconst chain = {\n  mainnet,\n  ropsten,\n  rinkeby,\n  goerli,\n  kovan,\n  optimism,\n  optimismKovan,\n  polygon,\n  polygonMumbai,\n  arbitrum,\n  arbitrumRinkeby,\n  localhost,\n  hardhat,\n  foundry\n};\nconst allChains = Object.values(chain);\nconst defaultChains = [chain.mainnet, chain.ropsten, chain.rinkeby, chain.goerli, chain.kovan];\nconst defaultL2Chains = [chain.arbitrum, chain.arbitrumRinkeby, chain.optimism, chain.optimismKovan];\n\nexport { allChains as a, chainId as b, chain as c, defaultChains as d, defaultL2Chains as e, etherscanBlockExplorers as f, arbitrum as g, arbitrumRinkeby as h, foundry as i, goerli as j, hardhat as k, kovan as l, localhost as m, mainnet as n, optimism as o, optimismKovan as p, polygon as q, polygonMumbai as r, rinkeby as s, ropsten as t };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}