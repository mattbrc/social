{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Desktop/crypto/playground/social/src/components/WorkoutForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nimport '../App.css';\nimport { Formik, Form, useField, useFormikContext } from \"formik\";\nimport * as Yup from \"yup\";\nimport styled from \"@emotion/styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyTextInput = _ref => {\n  _s();\n\n  let {\n    label,\n    ...props\n  } = _ref;\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(MyTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = MyTextInput;\n\nconst MyCheckbox = _ref2 => {\n  _s2();\n\n  let {\n    children,\n    ...props\n  } = _ref2;\n  const [field, meta] = useField({ ...props,\n    type: \"checkbox\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"checkbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...field,\n        ...props,\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true);\n}; // Styled components ....\n\n\n_s2(MyCheckbox, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c2 = MyCheckbox;\nconst StyledSelect = styled.select`\n    color: var(--blue);\n  `;\n_c3 = StyledSelect;\nconst StyledErrorMessage = styled.div`\n    font-size: 12px;\n    color: var(--red-600);\n    width: 400px;\n    margin-top: 0.25rem;\n    &:before {\n      content: \"❌ \";\n      font-size: 10px;\n    }\n    @media (prefers-color-scheme: dark) {\n      color: var(--red-300);\n    }\n  `;\n_c4 = StyledErrorMessage;\nconst StyledLabel = styled.label`\n    margin-top: 1rem;\n  `;\n_c5 = StyledLabel;\n\nconst MySelect = _ref3 => {\n  _s3();\n\n  let {\n    label,\n    ...props\n  } = _ref3;\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledSelect, { ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(StyledErrorMessage, {\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true);\n}; // And now we can use these\n\n\n_s3(MySelect, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c6 = MySelect;\n\nconst SubmitWorkoutForm = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Share a workout!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        workoutDetails: \"\",\n        workoutType: \"\" // added for our select\n\n      },\n      validationSchema: Yup.object({\n        workoutDetails: Yup.string().max(140, \"Must be 140 characters or less\").required(\"Required\"),\n        workoutType: Yup.string() // specify the set of valid values for job type\n        // @see http://bit.ly/yup-mixed-oneOf\n        .oneOf([\"Run\", \"Cycling\", \"Swim\", \"Weightlifting\", \"Other\"], \"Invalid Workout Type\").required(\"Required\")\n      }),\n      onSubmit: async (values, _ref4) => {\n        let {\n          setSubmitting\n        } = _ref4;\n        await new Promise(r => setTimeout(r, 500));\n        setSubmitting(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(MySelect, {\n          label: \"Workout Type\",\n          name: \"workoutType\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a workout type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Run\",\n            children: \"Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Cycling\",\n            children: \"Cycling\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Swim\",\n            children: \"Swim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Weightlifting\",\n            children: \"Weightlifting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Other\",\n            children: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"Workout Details\",\n          name: \"workoutDetails\",\n          type: \"text\",\n          placeholder: \"Share your workout details!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c7 = SubmitWorkoutForm;\n\nfunction WorkoutForm() {\n  return /*#__PURE__*/_jsxDEV(SubmitWorkoutForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n}\n\n_c8 = WorkoutForm;\nexport default WorkoutForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"MyTextInput\");\n$RefreshReg$(_c2, \"MyCheckbox\");\n$RefreshReg$(_c3, \"StyledSelect\");\n$RefreshReg$(_c4, \"StyledErrorMessage\");\n$RefreshReg$(_c5, \"StyledLabel\");\n$RefreshReg$(_c6, \"MySelect\");\n$RefreshReg$(_c7, \"SubmitWorkoutForm\");\n$RefreshReg$(_c8, \"WorkoutForm\");","map":{"version":3,"names":["React","Formik","Form","useField","useFormikContext","Yup","styled","MyTextInput","label","props","field","meta","id","name","touched","error","MyCheckbox","children","type","StyledSelect","select","StyledErrorMessage","div","StyledLabel","MySelect","SubmitWorkoutForm","workoutDetails","workoutType","object","string","max","required","oneOf","values","setSubmitting","Promise","r","setTimeout","WorkoutForm"],"sources":["/Users/matt/Desktop/crypto/playground/social/src/components/WorkoutForm.js"],"sourcesContent":["import React from \"react\"\nimport '../App.css'\nimport { Formik, Form, useField, useFormikContext } from \"formik\";\nimport * as Yup from \"yup\";\nimport styled from \"@emotion/styled\";\n\nconst MyTextInput = ({ label, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input> and alse replace ErrorMessage entirely.\n    const [field, meta] = useField(props);\n    return (\n      <>\n        <label htmlFor={props.id || props.name}>{label}</label>\n        <input className=\"text-input\" {...field} {...props} />\n        {meta.touched && meta.error ? (\n          <div className=\"error\">{meta.error}</div>\n        ) : null}\n      </>\n    );\n  };\n  \n  const MyCheckbox = ({ children, ...props }) => {\n    const [field, meta] = useField({ ...props, type: \"checkbox\" });\n    return (\n      <>\n        <label className=\"checkbox\">\n          <input {...field} {...props} type=\"checkbox\" />\n          {children}\n        </label>\n        {meta.touched && meta.error ? (\n          <div className=\"error\">{meta.error}</div>\n        ) : null}\n      </>\n    );\n  };\n  \n  // Styled components ....\n  const StyledSelect = styled.select`\n    color: var(--blue);\n  `;\n  \n  const StyledErrorMessage = styled.div`\n    font-size: 12px;\n    color: var(--red-600);\n    width: 400px;\n    margin-top: 0.25rem;\n    &:before {\n      content: \"❌ \";\n      font-size: 10px;\n    }\n    @media (prefers-color-scheme: dark) {\n      color: var(--red-300);\n    }\n  `;\n  \n  const StyledLabel = styled.label`\n    margin-top: 1rem;\n  `;\n  \n  const MySelect = ({ label, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input> and alse replace ErrorMessage entirely.\n    const [field, meta] = useField(props);\n    return (\n      <>\n        <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\n        <StyledSelect {...field} {...props} />\n        {meta.touched && meta.error ? (\n          <StyledErrorMessage>{meta.error}</StyledErrorMessage>\n        ) : null}\n      </>\n    );\n  };\n  \n  // And now we can use these\n  const SubmitWorkoutForm = () => {\n    return (\n      <>\n        <h1>Share a workout!</h1>\n        <Formik\n          initialValues={{\n            workoutDetails: \"\",\n            workoutType: \"\" // added for our select\n          }}\n          validationSchema={Yup.object({\n            workoutDetails: Yup.string()\n              .max(140, \"Must be 140 characters or less\")\n              .required(\"Required\"),\n            workoutType: Yup.string()\n              // specify the set of valid values for job type\n              // @see http://bit.ly/yup-mixed-oneOf\n              .oneOf(\n                [\"Run\", \"Cycling\", \"Swim\", \"Weightlifting\", \"Other\"],\n                \"Invalid Workout Type\"\n              )\n              .required(\"Required\")\n          })}\n          onSubmit={async (values, { setSubmitting }) => {\n            await new Promise((r) => setTimeout(r, 500));\n            setSubmitting(false);\n          }}\n        >\n          <Form>\n            <MySelect label=\"Workout Type\" name=\"workoutType\">\n              <option value=\"\">Select a workout type</option>\n              <option value=\"Run\">Run</option>\n              <option value=\"Cycling\">Cycling</option>\n              <option value=\"Swim\">Swim</option>\n              <option value=\"Weightlifting\">Weightlifting</option>\n              <option value=\"Other\">Other</option>\n            </MySelect>\n            <MyTextInput\n              label=\"Workout Details\"\n              name=\"workoutDetails\"\n              type=\"text\"\n              placeholder=\"Share your workout details!\"\n            />\n            <button type=\"submit\">Submit</button>\n          </Form>\n        </Formik>\n      </>\n    );\n  };\n  \n\nfunction WorkoutForm() {\n\n    return (\n        <SubmitWorkoutForm />\n    );\n}\n\nexport default WorkoutForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}