{"ast":null,"code":"import { d as Connector, _ as _defineProperty, i as _classPrivateFieldInitSpec, n as normalizeChainId, j as _classPrivateFieldGet, k as _classPrivateFieldSet, b as ConnectorNotFoundError, U as UserRejectedRequestError, R as ResourceUnavailableError, e as ChainNotConfiguredError, A as AddChainError, h as SwitchChainError, l as _classPrivateMethodInitSpec, m as _classPrivateMethodGet } from './base-68ec937e.esm.js';\nimport create from 'zustand/vanilla';\nimport { subscribeWithSelector, persist } from 'zustand/middleware';\nimport { providers } from 'ethers';\nimport { getAddress, hexValue } from 'ethers/lib/utils';\n\nfunction getInjectedName(ethereum) {\n  var _ethereum$providers, _getName;\n\n  if (!ethereum) return 'Injected';\n\n  const getName = provider => {\n    if (provider.isBraveWallet) return 'Brave Wallet';\n    if (provider.isCoinbaseWallet) return 'Coinbase Wallet';\n    if (provider.isExodus) return 'Exodus';\n    if (provider.isFrame) return 'Frame';\n    if (provider.isOpera) return 'Opera';\n    if (provider.isTally) return 'Tally';\n    if (provider.isTokenPocket) return 'TokenPocket';\n    if (provider.isTokenary) return 'Tokenary';\n    if (provider.isTrust) return 'Trust Wallet';\n    if (provider.isMetaMask) return 'MetaMask';\n  }; // Some injected providers detect multiple other providers and create a list at `ethers.providers`\n\n\n  if ((_ethereum$providers = ethereum.providers) !== null && _ethereum$providers !== void 0 && _ethereum$providers.length) {\n    var _names$; // Deduplicate names using Set\n    // Coinbase Wallet puts multiple providers in `ethereum.providers`\n\n\n    const nameSet = new Set();\n    let unknownCount = 1;\n\n    for (const provider of ethereum.providers) {\n      let name = getName(provider);\n\n      if (!name) {\n        name = \"Unknown Wallet #\".concat(unknownCount);\n        unknownCount += 1;\n      }\n\n      nameSet.add(name);\n    }\n\n    const names = [...nameSet];\n    if (names.length) return names;\n    return (_names$ = names[0]) !== null && _names$ !== void 0 ? _names$ : 'Injected';\n  }\n\n  return (_getName = getName(ethereum)) !== null && _getName !== void 0 ? _getName : 'Injected';\n}\n\nconst shimDisconnectKey = 'injected.shimDisconnect';\n\nvar _provider = /*#__PURE__*/new WeakMap();\n\nvar _switchingChains = /*#__PURE__*/new WeakMap();\n\nclass InjectedConnector extends Connector {\n  constructor() {\n    let {\n      chains,\n      options = {\n        shimDisconnect: true\n      }\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super({\n      chains,\n      options\n    });\n\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"ready\", typeof window != 'undefined' && !!window.ethereum);\n\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldInitSpec(this, _switchingChains, {\n      writable: true,\n      value: void 0\n    });\n\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) this.emit('disconnect');else this.emit('change', {\n        account: getAddress(accounts[0])\n      });\n    });\n\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit('change', {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n\n    _defineProperty(this, \"onDisconnect\", () => {\n      var _this$options, _this$options2, _getClient$storage; // We need this as MetaMask can emit the \"disconnect\" event\n      // upon switching chains. This workaround ensures that the\n      // user currently isn't in the process of switching chains.\n\n\n      if ((_this$options = this.options) !== null && _this$options !== void 0 && _this$options.shimChainChangedDisconnect && _classPrivateFieldGet(this, _switchingChains)) {\n        _classPrivateFieldSet(this, _switchingChains, false);\n\n        return;\n      }\n\n      this.emit('disconnect'); // Remove shim signalling wallet is disconnected\n\n      if ((_this$options2 = this.options) !== null && _this$options2 !== void 0 && _this$options2.shimDisconnect) (_getClient$storage = getClient().storage) === null || _getClient$storage === void 0 ? void 0 : _getClient$storage.removeItem(shimDisconnectKey);\n    });\n\n    let name = 'Injected';\n\n    if (typeof window !== 'undefined') {\n      const overrideName = options.name;\n      const detectedName = getInjectedName(window.ethereum);\n      if (overrideName) name = typeof overrideName === 'function' ? overrideName(detectedName) : overrideName;else name = typeof detectedName === 'string' ? detectedName : detectedName[0];\n    }\n\n    this.id = 'injected';\n    this.name = name;\n  }\n\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      var _this$options3, _getClient$storage2;\n\n      const provider = await this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n\n      if (provider.on) {\n        provider.on('accountsChanged', this.onAccountsChanged);\n        provider.on('chainChanged', this.onChainChanged);\n        provider.on('disconnect', this.onDisconnect);\n      }\n\n      this.emit('message', {\n        type: 'connecting'\n      });\n      const account = await this.getAccount(); // Switch to chain if provided\n\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      } // Add shim to storage signalling wallet is connected\n\n\n      if ((_this$options3 = this.options) !== null && _this$options3 !== void 0 && _this$options3.shimDisconnect) (_getClient$storage2 = getClient().storage) === null || _getClient$storage2 === void 0 ? void 0 : _getClient$storage2.setItem(shimDisconnectKey, true);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n      if (error.code === -32002) throw new ResourceUnavailableError(error);\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    var _this$options4, _getClient$storage3;\n\n    const provider = await this.getProvider();\n    if (!(provider !== null && provider !== void 0 && provider.removeListener)) return;\n    provider.removeListener('accountsChanged', this.onAccountsChanged);\n    provider.removeListener('chainChanged', this.onChainChanged);\n    provider.removeListener('disconnect', this.onDisconnect); // Remove shim signalling wallet is disconnected\n\n    if ((_this$options4 = this.options) !== null && _this$options4 !== void 0 && _this$options4.shimDisconnect) (_getClient$storage3 = getClient().storage) === null || _getClient$storage3 === void 0 ? void 0 : _getClient$storage3.removeItem(shimDisconnectKey);\n  }\n\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    const accounts = await provider.request({\n      method: 'eth_requestAccounts'\n    }); // return checksum address\n\n    return getAddress(accounts[0]);\n  }\n\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    return await provider.request({\n      method: 'eth_chainId'\n    }).then(normalizeChainId);\n  }\n\n  async getProvider() {\n    if (typeof window !== 'undefined' && !!window.ethereum) _classPrivateFieldSet(this, _provider, window.ethereum);\n    return _classPrivateFieldGet(this, _provider);\n  }\n\n  async getSigner() {\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider).getSigner(account);\n  }\n\n  async isAuthorized() {\n    try {\n      var _this$options5, _getClient$storage4;\n\n      if ((_this$options5 = this.options) !== null && _this$options5 !== void 0 && _this$options5.shimDisconnect && // If shim does not exist in storage, wallet is disconnected\n      !((_getClient$storage4 = getClient().storage) !== null && _getClient$storage4 !== void 0 && _getClient$storage4.getItem(shimDisconnectKey))) return false;\n      const provider = await this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n      const accounts = await provider.request({\n        method: 'eth_accounts'\n      });\n      const account = accounts[0];\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n\n  async switchChain(chainId) {\n    var _this$options6;\n\n    if ((_this$options6 = this.options) !== null && _this$options6 !== void 0 && _this$options6.shimChainChangedDisconnect) _classPrivateFieldSet(this, _switchingChains, true);\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    const id = hexValue(chainId);\n\n    try {\n      var _this$chains$find;\n\n      await provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: id\n        }]\n      });\n      return (_this$chains$find = this.chains.find(x => x.id === chainId)) !== null && _this$chains$find !== void 0 ? _this$chains$find : {\n        id: chainId,\n        name: \"Chain \".concat(id),\n        network: \"\".concat(id),\n        rpcUrls: {\n          default: ''\n        }\n      };\n    } catch (error) {\n      var _data, _data$originalError;\n\n      const chain = this.chains.find(x => x.id === chainId);\n      if (!chain) throw new ChainNotConfiguredError(); // Indicates chain is not added to provider\n\n      if (error.code === 4902 || // Unwrapping for MetaMask Mobile\n      // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719\n      (error === null || error === void 0 ? void 0 : (_data = error.data) === null || _data === void 0 ? void 0 : (_data$originalError = _data.originalError) === null || _data$originalError === void 0 ? void 0 : _data$originalError.code) === 4902) {\n        try {\n          var _chain$rpcUrls$public;\n\n          await provider.request({\n            method: 'wallet_addEthereumChain',\n            params: [{\n              chainId: id,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: [(_chain$rpcUrls$public = chain.rpcUrls.public) !== null && _chain$rpcUrls$public !== void 0 ? _chain$rpcUrls$public : chain.rpcUrls.default],\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          if (this.isUserRejectedRequestError(addError)) throw new UserRejectedRequestError(error);\n          throw new AddChainError();\n        }\n      }\n\n      if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n      throw new SwitchChainError(error);\n    }\n  }\n\n  async watchAsset(_ref) {\n    let {\n      address,\n      decimals = 18,\n      image,\n      symbol\n    } = _ref;\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    return await provider.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20',\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n\n}\n\nconst noopStorage = {\n  getItem: _key => '',\n  setItem: (_key, _value) => null,\n  removeItem: _key => null\n};\n\nfunction createStorage(_ref) {\n  let {\n    storage,\n    key: prefix = 'wagmi'\n  } = _ref;\n  return { ...storage,\n    getItem: function (key) {\n      let defaultState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      const value = storage.getItem(\"\".concat(prefix, \".\").concat(key));\n\n      try {\n        return value ? JSON.parse(value) : defaultState;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(\"\".concat(prefix, \".\").concat(key));\n      } else {\n        try {\n          storage.setItem(\"\".concat(prefix, \".\").concat(key), JSON.stringify(value));\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    removeItem: key => storage.removeItem(\"\".concat(prefix, \".\").concat(key))\n  };\n}\n\nconst storeKey = 'store';\n\nvar _isAutoConnecting = /*#__PURE__*/new WeakMap();\n\nvar _lastUsedConnector = /*#__PURE__*/new WeakMap();\n\nvar _addEffects = /*#__PURE__*/new WeakSet();\n\nclass Client {\n  constructor(_ref) {\n    let {\n      autoConnect = false,\n      connectors = [new InjectedConnector()],\n      provider: _provider,\n      storage = createStorage({\n        storage: typeof window !== 'undefined' ? window.localStorage : noopStorage\n      }),\n      webSocketProvider: _webSocketProvider\n    } = _ref;\n\n    _classPrivateMethodInitSpec(this, _addEffects);\n\n    _defineProperty(this, \"config\", void 0);\n\n    _defineProperty(this, \"storage\", void 0);\n\n    _defineProperty(this, \"store\", void 0);\n\n    _classPrivateFieldInitSpec(this, _isAutoConnecting, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldInitSpec(this, _lastUsedConnector, {\n      writable: true,\n      value: void 0\n    }); // Check status for autoConnect flag\n\n\n    let status = 'disconnected';\n\n    let _chainId;\n\n    if (autoConnect) {\n      try {\n        var _JSON$parse, _JSON$parse$state, _data$chain;\n\n        const rawState = storage.getItem(storeKey, '');\n        const data = (_JSON$parse = JSON.parse(rawState || '{}')) === null || _JSON$parse === void 0 ? void 0 : (_JSON$parse$state = _JSON$parse.state) === null || _JSON$parse$state === void 0 ? void 0 : _JSON$parse$state.data; // If account exists in localStorage, set status to reconnecting\n\n        status = data !== null && data !== void 0 && data.account ? 'reconnecting' : 'connecting';\n        _chainId = data === null || data === void 0 ? void 0 : (_data$chain = data.chain) === null || _data$chain === void 0 ? void 0 : _data$chain.id; // eslint-disable-next-line no-empty\n      } catch (_error) {}\n    } // Create store\n\n\n    this.store = create(subscribeWithSelector(persist(() => ({\n      connectors: typeof connectors === 'function' ? connectors() : connectors,\n      provider: typeof _provider === 'function' ? _provider({\n        chainId: _chainId\n      }) : _provider,\n      status,\n      webSocketProvider: typeof _webSocketProvider === 'function' ? _webSocketProvider({\n        chainId: _chainId\n      }) : _webSocketProvider\n    }), {\n      name: storeKey,\n      getStorage: () => storage,\n      partialize: state => {\n        var _state$data, _state$data2;\n\n        return { ...(autoConnect && {\n            data: {\n              account: state === null || state === void 0 ? void 0 : (_state$data = state.data) === null || _state$data === void 0 ? void 0 : _state$data.account,\n              chain: state === null || state === void 0 ? void 0 : (_state$data2 = state.data) === null || _state$data2 === void 0 ? void 0 : _state$data2.chain\n            }\n          }),\n          chains: state === null || state === void 0 ? void 0 : state.chains\n        };\n      },\n      version: 1\n    })));\n    this.config = {\n      autoConnect,\n      connectors,\n      provider: _provider,\n      storage,\n      webSocketProvider: _webSocketProvider\n    };\n    this.storage = storage;\n\n    _classPrivateFieldSet(this, _lastUsedConnector, storage === null || storage === void 0 ? void 0 : storage.getItem('wallet'));\n\n    _classPrivateMethodGet(this, _addEffects, _addEffects2).call(this);\n  }\n\n  get chains() {\n    return this.store.getState().chains;\n  }\n\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n\n  get connector() {\n    return this.store.getState().connector;\n  }\n\n  get data() {\n    return this.store.getState().data;\n  }\n\n  get error() {\n    return this.store.getState().error;\n  }\n\n  get lastUsedChainId() {\n    var _this$data, _this$data$chain;\n\n    return (_this$data = this.data) === null || _this$data === void 0 ? void 0 : (_this$data$chain = _this$data.chain) === null || _this$data$chain === void 0 ? void 0 : _this$data$chain.id;\n  }\n\n  get provider() {\n    return this.store.getState().provider;\n  }\n\n  get status() {\n    return this.store.getState().status;\n  }\n\n  get subscribe() {\n    return this.store.subscribe;\n  }\n\n  get webSocketProvider() {\n    return this.store.getState().webSocketProvider;\n  }\n\n  setState(updater) {\n    const newState = typeof updater === 'function' ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n\n  clearState() {\n    this.setState(x => ({ ...x,\n      connector: undefined,\n      data: undefined,\n      error: undefined,\n      status: 'disconnected'\n    }));\n  }\n\n  async destroy() {\n    var _this$connector$disco, _this$connector;\n\n    if (this.connector) await ((_this$connector$disco = (_this$connector = this.connector).disconnect) === null || _this$connector$disco === void 0 ? void 0 : _this$connector$disco.call(_this$connector));\n\n    _classPrivateFieldSet(this, _isAutoConnecting, false);\n\n    this.clearState();\n    this.store.destroy();\n  }\n\n  async autoConnect() {\n    if (_classPrivateFieldGet(this, _isAutoConnecting)) return;\n\n    _classPrivateFieldSet(this, _isAutoConnecting, true);\n\n    if (!this.connectors.length) return; // Try last used connector first\n\n    const sorted = _classPrivateFieldGet(this, _lastUsedConnector) ? [...this.connectors].sort(x => x.id === _classPrivateFieldGet(this, _lastUsedConnector) ? -1 : 1) : this.connectors;\n    let connected = false;\n\n    for (const connector of sorted) {\n      if (!connector.ready || !connector.isAuthorized) continue;\n      const isAuthorized = await connector.isAuthorized();\n      if (!isAuthorized) continue;\n      const data = await connector.connect();\n      this.setState(x => ({ ...x,\n        connector,\n        chains: connector === null || connector === void 0 ? void 0 : connector.chains,\n        data,\n        status: 'connected'\n      }));\n      connected = true;\n      break;\n    } // If connecting didn't succeed, set to disconnected\n\n\n    if (!connected) this.setState(x => ({ ...x,\n      data: undefined,\n      status: 'disconnected'\n    }));\n\n    _classPrivateFieldSet(this, _isAutoConnecting, false);\n\n    return this.data;\n  }\n\n  setLastUsedConnector() {\n    var _this$storage;\n\n    let lastUsedConnector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    (_this$storage = this.storage) === null || _this$storage === void 0 ? void 0 : _this$storage.setItem('wallet', lastUsedConnector);\n  }\n\n}\n\nfunction _addEffects2() {\n  const onChange = data => {\n    this.setState(x => ({ ...x,\n      data: { ...x.data,\n        ...data\n      }\n    }));\n  };\n\n  const onDisconnect = () => {\n    this.clearState();\n  };\n\n  const onError = error => {\n    this.setState(x => ({ ...x,\n      error\n    }));\n  };\n\n  this.store.subscribe(_ref2 => {\n    let {\n      connector\n    } = _ref2;\n    return connector;\n  }, (connector, prevConnector) => {\n    var _prevConnector$off, _prevConnector$off2, _prevConnector$off3, _connector$on, _connector$on2, _connector$on3;\n\n    prevConnector === null || prevConnector === void 0 ? void 0 : (_prevConnector$off = prevConnector.off) === null || _prevConnector$off === void 0 ? void 0 : _prevConnector$off.call(prevConnector, 'change', onChange);\n    prevConnector === null || prevConnector === void 0 ? void 0 : (_prevConnector$off2 = prevConnector.off) === null || _prevConnector$off2 === void 0 ? void 0 : _prevConnector$off2.call(prevConnector, 'disconnect', onDisconnect);\n    prevConnector === null || prevConnector === void 0 ? void 0 : (_prevConnector$off3 = prevConnector.off) === null || _prevConnector$off3 === void 0 ? void 0 : _prevConnector$off3.call(prevConnector, 'error', onError);\n    if (!connector) return;\n    (_connector$on = connector.on) === null || _connector$on === void 0 ? void 0 : _connector$on.call(connector, 'change', onChange);\n    (_connector$on2 = connector.on) === null || _connector$on2 === void 0 ? void 0 : _connector$on2.call(connector, 'disconnect', onDisconnect);\n    (_connector$on3 = connector.on) === null || _connector$on3 === void 0 ? void 0 : _connector$on3.call(connector, 'error', onError);\n  });\n  const {\n    provider,\n    webSocketProvider\n  } = this.config;\n  const subscribeProvider = typeof provider === 'function';\n  const subscribeWebSocketProvider = typeof webSocketProvider === 'function';\n  if (subscribeProvider || subscribeWebSocketProvider) this.store.subscribe(_ref3 => {\n    var _data$chain2;\n\n    let {\n      data\n    } = _ref3;\n    return data === null || data === void 0 ? void 0 : (_data$chain2 = data.chain) === null || _data$chain2 === void 0 ? void 0 : _data$chain2.id;\n  }, chainId => {\n    this.setState(x => ({ ...x,\n      provider: subscribeProvider ? provider({\n        chainId\n      }) : x.provider,\n      webSocketProvider: subscribeWebSocketProvider ? webSocketProvider({\n        chainId\n      }) : x.webSocketProvider\n    }));\n  });\n}\n\nlet client;\n\nfunction createClient(config) {\n  const client_ = new Client(config);\n  client = client_;\n  return client_;\n}\n\nfunction getClient() {\n  if (!client) {\n    throw new Error('No wagmi client found. Ensure you have set up a client: https://wagmi.sh/docs/client');\n  }\n\n  return client;\n}\n\nexport { Client as C, InjectedConnector as I, createStorage as a, createClient as c, getClient as g, noopStorage as n, shimDisconnectKey as s };","map":{"version":3,"names":["d","Connector","_","_defineProperty","i","_classPrivateFieldInitSpec","n","normalizeChainId","j","_classPrivateFieldGet","k","_classPrivateFieldSet","b","ConnectorNotFoundError","U","UserRejectedRequestError","R","ResourceUnavailableError","e","ChainNotConfiguredError","A","AddChainError","h","SwitchChainError","l","_classPrivateMethodInitSpec","m","_classPrivateMethodGet","create","subscribeWithSelector","persist","providers","getAddress","hexValue","getInjectedName","ethereum","_ethereum$providers","_getName","getName","provider","isBraveWallet","isCoinbaseWallet","isExodus","isFrame","isOpera","isTally","isTokenPocket","isTokenary","isTrust","isMetaMask","length","_names$","nameSet","Set","unknownCount","name","concat","add","names","shimDisconnectKey","_provider","WeakMap","_switchingChains","InjectedConnector","constructor","chains","options","shimDisconnect","arguments","undefined","window","writable","value","accounts","emit","account","chainId","id","unsupported","isChainUnsupported","chain","_this$options","_this$options2","_getClient$storage","shimChainChangedDisconnect","getClient","storage","removeItem","overrideName","detectedName","connect","_this$options3","_getClient$storage2","getProvider","on","onAccountsChanged","onChainChanged","onDisconnect","type","getAccount","getChainId","switchChain","setItem","error","isUserRejectedRequestError","code","disconnect","_this$options4","_getClient$storage3","removeListener","request","method","then","getSigner","Promise","all","Web3Provider","isAuthorized","_this$options5","_getClient$storage4","getItem","_this$options6","_this$chains$find","params","find","x","network","rpcUrls","default","_data","_data$originalError","data","originalError","_chain$rpcUrls$public","chainName","nativeCurrency","public","blockExplorerUrls","getBlockExplorerUrls","addError","watchAsset","_ref","address","decimals","image","symbol","noopStorage","_key","_value","createStorage","key","prefix","defaultState","JSON","parse","console","warn","stringify","err","storeKey","_isAutoConnecting","_lastUsedConnector","_addEffects","WeakSet","Client","autoConnect","connectors","localStorage","webSocketProvider","_webSocketProvider","status","_chainId","_JSON$parse","_JSON$parse$state","_data$chain","rawState","state","_error","store","getStorage","partialize","_state$data","_state$data2","version","config","_addEffects2","call","getState","connector","lastUsedChainId","_this$data","_this$data$chain","subscribe","setState","updater","newState","clearState","destroy","_this$connector$disco","_this$connector","sorted","sort","connected","ready","setLastUsedConnector","_this$storage","lastUsedConnector","onChange","onError","_ref2","prevConnector","_prevConnector$off","_prevConnector$off2","_prevConnector$off3","_connector$on","_connector$on2","_connector$on3","off","subscribeProvider","subscribeWebSocketProvider","_ref3","_data$chain2","client","createClient","client_","Error","C","I","a","c","g","s"],"sources":["/Users/matt/Desktop/crypto/playground/social/node_modules/@wagmi/core/dist/client-5df5c2eb.esm.js"],"sourcesContent":["import { d as Connector, _ as _defineProperty, i as _classPrivateFieldInitSpec, n as normalizeChainId, j as _classPrivateFieldGet, k as _classPrivateFieldSet, b as ConnectorNotFoundError, U as UserRejectedRequestError, R as ResourceUnavailableError, e as ChainNotConfiguredError, A as AddChainError, h as SwitchChainError, l as _classPrivateMethodInitSpec, m as _classPrivateMethodGet } from './base-68ec937e.esm.js';\nimport create from 'zustand/vanilla';\nimport { subscribeWithSelector, persist } from 'zustand/middleware';\nimport { providers } from 'ethers';\nimport { getAddress, hexValue } from 'ethers/lib/utils';\n\nfunction getInjectedName(ethereum) {\n  var _ethereum$providers, _getName;\n\n  if (!ethereum) return 'Injected';\n\n  const getName = provider => {\n    if (provider.isBraveWallet) return 'Brave Wallet';\n    if (provider.isCoinbaseWallet) return 'Coinbase Wallet';\n    if (provider.isExodus) return 'Exodus';\n    if (provider.isFrame) return 'Frame';\n    if (provider.isOpera) return 'Opera';\n    if (provider.isTally) return 'Tally';\n    if (provider.isTokenPocket) return 'TokenPocket';\n    if (provider.isTokenary) return 'Tokenary';\n    if (provider.isTrust) return 'Trust Wallet';\n    if (provider.isMetaMask) return 'MetaMask';\n  }; // Some injected providers detect multiple other providers and create a list at `ethers.providers`\n\n\n  if ((_ethereum$providers = ethereum.providers) !== null && _ethereum$providers !== void 0 && _ethereum$providers.length) {\n    var _names$;\n\n    // Deduplicate names using Set\n    // Coinbase Wallet puts multiple providers in `ethereum.providers`\n    const nameSet = new Set();\n    let unknownCount = 1;\n\n    for (const provider of ethereum.providers) {\n      let name = getName(provider);\n\n      if (!name) {\n        name = \"Unknown Wallet #\".concat(unknownCount);\n        unknownCount += 1;\n      }\n\n      nameSet.add(name);\n    }\n\n    const names = [...nameSet];\n    if (names.length) return names;\n    return (_names$ = names[0]) !== null && _names$ !== void 0 ? _names$ : 'Injected';\n  }\n\n  return (_getName = getName(ethereum)) !== null && _getName !== void 0 ? _getName : 'Injected';\n}\n\nconst shimDisconnectKey = 'injected.shimDisconnect';\n\nvar _provider = /*#__PURE__*/new WeakMap();\n\nvar _switchingChains = /*#__PURE__*/new WeakMap();\n\nclass InjectedConnector extends Connector {\n  constructor() {\n    let {\n      chains,\n      options = {\n        shimDisconnect: true\n      }\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super({\n      chains,\n      options\n    });\n\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"ready\", typeof window != 'undefined' && !!window.ethereum);\n\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldInitSpec(this, _switchingChains, {\n      writable: true,\n      value: void 0\n    });\n\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) this.emit('disconnect');else this.emit('change', {\n        account: getAddress(accounts[0])\n      });\n    });\n\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit('change', {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n\n    _defineProperty(this, \"onDisconnect\", () => {\n      var _this$options, _this$options2, _getClient$storage;\n\n      // We need this as MetaMask can emit the \"disconnect\" event\n      // upon switching chains. This workaround ensures that the\n      // user currently isn't in the process of switching chains.\n      if ((_this$options = this.options) !== null && _this$options !== void 0 && _this$options.shimChainChangedDisconnect && _classPrivateFieldGet(this, _switchingChains)) {\n        _classPrivateFieldSet(this, _switchingChains, false);\n\n        return;\n      }\n\n      this.emit('disconnect'); // Remove shim signalling wallet is disconnected\n\n      if ((_this$options2 = this.options) !== null && _this$options2 !== void 0 && _this$options2.shimDisconnect) (_getClient$storage = getClient().storage) === null || _getClient$storage === void 0 ? void 0 : _getClient$storage.removeItem(shimDisconnectKey);\n    });\n\n    let name = 'Injected';\n\n    if (typeof window !== 'undefined') {\n      const overrideName = options.name;\n      const detectedName = getInjectedName(window.ethereum);\n      if (overrideName) name = typeof overrideName === 'function' ? overrideName(detectedName) : overrideName;else name = typeof detectedName === 'string' ? detectedName : detectedName[0];\n    }\n\n    this.id = 'injected';\n    this.name = name;\n  }\n\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      var _this$options3, _getClient$storage2;\n\n      const provider = await this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n\n      if (provider.on) {\n        provider.on('accountsChanged', this.onAccountsChanged);\n        provider.on('chainChanged', this.onChainChanged);\n        provider.on('disconnect', this.onDisconnect);\n      }\n\n      this.emit('message', {\n        type: 'connecting'\n      });\n      const account = await this.getAccount(); // Switch to chain if provided\n\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      } // Add shim to storage signalling wallet is connected\n\n\n      if ((_this$options3 = this.options) !== null && _this$options3 !== void 0 && _this$options3.shimDisconnect) (_getClient$storage2 = getClient().storage) === null || _getClient$storage2 === void 0 ? void 0 : _getClient$storage2.setItem(shimDisconnectKey, true);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n      if (error.code === -32002) throw new ResourceUnavailableError(error);\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    var _this$options4, _getClient$storage3;\n\n    const provider = await this.getProvider();\n    if (!(provider !== null && provider !== void 0 && provider.removeListener)) return;\n    provider.removeListener('accountsChanged', this.onAccountsChanged);\n    provider.removeListener('chainChanged', this.onChainChanged);\n    provider.removeListener('disconnect', this.onDisconnect); // Remove shim signalling wallet is disconnected\n\n    if ((_this$options4 = this.options) !== null && _this$options4 !== void 0 && _this$options4.shimDisconnect) (_getClient$storage3 = getClient().storage) === null || _getClient$storage3 === void 0 ? void 0 : _getClient$storage3.removeItem(shimDisconnectKey);\n  }\n\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    const accounts = await provider.request({\n      method: 'eth_requestAccounts'\n    }); // return checksum address\n\n    return getAddress(accounts[0]);\n  }\n\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    return await provider.request({\n      method: 'eth_chainId'\n    }).then(normalizeChainId);\n  }\n\n  async getProvider() {\n    if (typeof window !== 'undefined' && !!window.ethereum) _classPrivateFieldSet(this, _provider, window.ethereum);\n    return _classPrivateFieldGet(this, _provider);\n  }\n\n  async getSigner() {\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider).getSigner(account);\n  }\n\n  async isAuthorized() {\n    try {\n      var _this$options5, _getClient$storage4;\n\n      if ((_this$options5 = this.options) !== null && _this$options5 !== void 0 && _this$options5.shimDisconnect && // If shim does not exist in storage, wallet is disconnected\n      !((_getClient$storage4 = getClient().storage) !== null && _getClient$storage4 !== void 0 && _getClient$storage4.getItem(shimDisconnectKey))) return false;\n      const provider = await this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n      const accounts = await provider.request({\n        method: 'eth_accounts'\n      });\n      const account = accounts[0];\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n\n  async switchChain(chainId) {\n    var _this$options6;\n\n    if ((_this$options6 = this.options) !== null && _this$options6 !== void 0 && _this$options6.shimChainChangedDisconnect) _classPrivateFieldSet(this, _switchingChains, true);\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    const id = hexValue(chainId);\n\n    try {\n      var _this$chains$find;\n\n      await provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: id\n        }]\n      });\n      return (_this$chains$find = this.chains.find(x => x.id === chainId)) !== null && _this$chains$find !== void 0 ? _this$chains$find : {\n        id: chainId,\n        name: \"Chain \".concat(id),\n        network: \"\".concat(id),\n        rpcUrls: {\n          default: ''\n        }\n      };\n    } catch (error) {\n      var _data, _data$originalError;\n\n      const chain = this.chains.find(x => x.id === chainId);\n      if (!chain) throw new ChainNotConfiguredError(); // Indicates chain is not added to provider\n\n      if (error.code === 4902 || // Unwrapping for MetaMask Mobile\n      // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719\n      (error === null || error === void 0 ? void 0 : (_data = error.data) === null || _data === void 0 ? void 0 : (_data$originalError = _data.originalError) === null || _data$originalError === void 0 ? void 0 : _data$originalError.code) === 4902) {\n        try {\n          var _chain$rpcUrls$public;\n\n          await provider.request({\n            method: 'wallet_addEthereumChain',\n            params: [{\n              chainId: id,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: [(_chain$rpcUrls$public = chain.rpcUrls.public) !== null && _chain$rpcUrls$public !== void 0 ? _chain$rpcUrls$public : chain.rpcUrls.default],\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          if (this.isUserRejectedRequestError(addError)) throw new UserRejectedRequestError(error);\n          throw new AddChainError();\n        }\n      }\n\n      if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n      throw new SwitchChainError(error);\n    }\n  }\n\n  async watchAsset(_ref) {\n    let {\n      address,\n      decimals = 18,\n      image,\n      symbol\n    } = _ref;\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    return await provider.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20',\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n\n}\n\nconst noopStorage = {\n  getItem: _key => '',\n  setItem: (_key, _value) => null,\n  removeItem: _key => null\n};\nfunction createStorage(_ref) {\n  let {\n    storage,\n    key: prefix = 'wagmi'\n  } = _ref;\n  return { ...storage,\n    getItem: function (key) {\n      let defaultState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      const value = storage.getItem(\"\".concat(prefix, \".\").concat(key));\n\n      try {\n        return value ? JSON.parse(value) : defaultState;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(\"\".concat(prefix, \".\").concat(key));\n      } else {\n        try {\n          storage.setItem(\"\".concat(prefix, \".\").concat(key), JSON.stringify(value));\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    removeItem: key => storage.removeItem(\"\".concat(prefix, \".\").concat(key))\n  };\n}\n\nconst storeKey = 'store';\n\nvar _isAutoConnecting = /*#__PURE__*/new WeakMap();\n\nvar _lastUsedConnector = /*#__PURE__*/new WeakMap();\n\nvar _addEffects = /*#__PURE__*/new WeakSet();\n\nclass Client {\n  constructor(_ref) {\n    let {\n      autoConnect = false,\n      connectors = [new InjectedConnector()],\n      provider: _provider,\n      storage = createStorage({\n        storage: typeof window !== 'undefined' ? window.localStorage : noopStorage\n      }),\n      webSocketProvider: _webSocketProvider\n    } = _ref;\n\n    _classPrivateMethodInitSpec(this, _addEffects);\n\n    _defineProperty(this, \"config\", void 0);\n\n    _defineProperty(this, \"storage\", void 0);\n\n    _defineProperty(this, \"store\", void 0);\n\n    _classPrivateFieldInitSpec(this, _isAutoConnecting, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldInitSpec(this, _lastUsedConnector, {\n      writable: true,\n      value: void 0\n    });\n\n    // Check status for autoConnect flag\n    let status = 'disconnected';\n\n    let _chainId;\n\n    if (autoConnect) {\n      try {\n        var _JSON$parse, _JSON$parse$state, _data$chain;\n\n        const rawState = storage.getItem(storeKey, '');\n        const data = (_JSON$parse = JSON.parse(rawState || '{}')) === null || _JSON$parse === void 0 ? void 0 : (_JSON$parse$state = _JSON$parse.state) === null || _JSON$parse$state === void 0 ? void 0 : _JSON$parse$state.data; // If account exists in localStorage, set status to reconnecting\n\n        status = data !== null && data !== void 0 && data.account ? 'reconnecting' : 'connecting';\n        _chainId = data === null || data === void 0 ? void 0 : (_data$chain = data.chain) === null || _data$chain === void 0 ? void 0 : _data$chain.id; // eslint-disable-next-line no-empty\n      } catch (_error) {}\n    } // Create store\n\n\n    this.store = create(subscribeWithSelector(persist(() => ({\n      connectors: typeof connectors === 'function' ? connectors() : connectors,\n      provider: typeof _provider === 'function' ? _provider({\n        chainId: _chainId\n      }) : _provider,\n      status,\n      webSocketProvider: typeof _webSocketProvider === 'function' ? _webSocketProvider({\n        chainId: _chainId\n      }) : _webSocketProvider\n    }), {\n      name: storeKey,\n      getStorage: () => storage,\n      partialize: state => {\n        var _state$data, _state$data2;\n\n        return { ...(autoConnect && {\n            data: {\n              account: state === null || state === void 0 ? void 0 : (_state$data = state.data) === null || _state$data === void 0 ? void 0 : _state$data.account,\n              chain: state === null || state === void 0 ? void 0 : (_state$data2 = state.data) === null || _state$data2 === void 0 ? void 0 : _state$data2.chain\n            }\n          }),\n          chains: state === null || state === void 0 ? void 0 : state.chains\n        };\n      },\n      version: 1\n    })));\n    this.config = {\n      autoConnect,\n      connectors,\n      provider: _provider,\n      storage,\n      webSocketProvider: _webSocketProvider\n    };\n    this.storage = storage;\n\n    _classPrivateFieldSet(this, _lastUsedConnector, storage === null || storage === void 0 ? void 0 : storage.getItem('wallet'));\n\n    _classPrivateMethodGet(this, _addEffects, _addEffects2).call(this);\n  }\n\n  get chains() {\n    return this.store.getState().chains;\n  }\n\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n\n  get connector() {\n    return this.store.getState().connector;\n  }\n\n  get data() {\n    return this.store.getState().data;\n  }\n\n  get error() {\n    return this.store.getState().error;\n  }\n\n  get lastUsedChainId() {\n    var _this$data, _this$data$chain;\n\n    return (_this$data = this.data) === null || _this$data === void 0 ? void 0 : (_this$data$chain = _this$data.chain) === null || _this$data$chain === void 0 ? void 0 : _this$data$chain.id;\n  }\n\n  get provider() {\n    return this.store.getState().provider;\n  }\n\n  get status() {\n    return this.store.getState().status;\n  }\n\n  get subscribe() {\n    return this.store.subscribe;\n  }\n\n  get webSocketProvider() {\n    return this.store.getState().webSocketProvider;\n  }\n\n  setState(updater) {\n    const newState = typeof updater === 'function' ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n\n  clearState() {\n    this.setState(x => ({ ...x,\n      connector: undefined,\n      data: undefined,\n      error: undefined,\n      status: 'disconnected'\n    }));\n  }\n\n  async destroy() {\n    var _this$connector$disco, _this$connector;\n\n    if (this.connector) await ((_this$connector$disco = (_this$connector = this.connector).disconnect) === null || _this$connector$disco === void 0 ? void 0 : _this$connector$disco.call(_this$connector));\n\n    _classPrivateFieldSet(this, _isAutoConnecting, false);\n\n    this.clearState();\n    this.store.destroy();\n  }\n\n  async autoConnect() {\n    if (_classPrivateFieldGet(this, _isAutoConnecting)) return;\n\n    _classPrivateFieldSet(this, _isAutoConnecting, true);\n\n    if (!this.connectors.length) return; // Try last used connector first\n\n    const sorted = _classPrivateFieldGet(this, _lastUsedConnector) ? [...this.connectors].sort(x => x.id === _classPrivateFieldGet(this, _lastUsedConnector) ? -1 : 1) : this.connectors;\n    let connected = false;\n\n    for (const connector of sorted) {\n      if (!connector.ready || !connector.isAuthorized) continue;\n      const isAuthorized = await connector.isAuthorized();\n      if (!isAuthorized) continue;\n      const data = await connector.connect();\n      this.setState(x => ({ ...x,\n        connector,\n        chains: connector === null || connector === void 0 ? void 0 : connector.chains,\n        data,\n        status: 'connected'\n      }));\n      connected = true;\n      break;\n    } // If connecting didn't succeed, set to disconnected\n\n\n    if (!connected) this.setState(x => ({ ...x,\n      data: undefined,\n      status: 'disconnected'\n    }));\n\n    _classPrivateFieldSet(this, _isAutoConnecting, false);\n\n    return this.data;\n  }\n\n  setLastUsedConnector() {\n    var _this$storage;\n\n    let lastUsedConnector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    (_this$storage = this.storage) === null || _this$storage === void 0 ? void 0 : _this$storage.setItem('wallet', lastUsedConnector);\n  }\n\n}\n\nfunction _addEffects2() {\n  const onChange = data => {\n    this.setState(x => ({ ...x,\n      data: { ...x.data,\n        ...data\n      }\n    }));\n  };\n\n  const onDisconnect = () => {\n    this.clearState();\n  };\n\n  const onError = error => {\n    this.setState(x => ({ ...x,\n      error\n    }));\n  };\n\n  this.store.subscribe(_ref2 => {\n    let {\n      connector\n    } = _ref2;\n    return connector;\n  }, (connector, prevConnector) => {\n    var _prevConnector$off, _prevConnector$off2, _prevConnector$off3, _connector$on, _connector$on2, _connector$on3;\n\n    prevConnector === null || prevConnector === void 0 ? void 0 : (_prevConnector$off = prevConnector.off) === null || _prevConnector$off === void 0 ? void 0 : _prevConnector$off.call(prevConnector, 'change', onChange);\n    prevConnector === null || prevConnector === void 0 ? void 0 : (_prevConnector$off2 = prevConnector.off) === null || _prevConnector$off2 === void 0 ? void 0 : _prevConnector$off2.call(prevConnector, 'disconnect', onDisconnect);\n    prevConnector === null || prevConnector === void 0 ? void 0 : (_prevConnector$off3 = prevConnector.off) === null || _prevConnector$off3 === void 0 ? void 0 : _prevConnector$off3.call(prevConnector, 'error', onError);\n    if (!connector) return;\n    (_connector$on = connector.on) === null || _connector$on === void 0 ? void 0 : _connector$on.call(connector, 'change', onChange);\n    (_connector$on2 = connector.on) === null || _connector$on2 === void 0 ? void 0 : _connector$on2.call(connector, 'disconnect', onDisconnect);\n    (_connector$on3 = connector.on) === null || _connector$on3 === void 0 ? void 0 : _connector$on3.call(connector, 'error', onError);\n  });\n  const {\n    provider,\n    webSocketProvider\n  } = this.config;\n  const subscribeProvider = typeof provider === 'function';\n  const subscribeWebSocketProvider = typeof webSocketProvider === 'function';\n  if (subscribeProvider || subscribeWebSocketProvider) this.store.subscribe(_ref3 => {\n    var _data$chain2;\n\n    let {\n      data\n    } = _ref3;\n    return data === null || data === void 0 ? void 0 : (_data$chain2 = data.chain) === null || _data$chain2 === void 0 ? void 0 : _data$chain2.id;\n  }, chainId => {\n    this.setState(x => ({ ...x,\n      provider: subscribeProvider ? provider({\n        chainId\n      }) : x.provider,\n      webSocketProvider: subscribeWebSocketProvider ? webSocketProvider({\n        chainId\n      }) : x.webSocketProvider\n    }));\n  });\n}\n\nlet client;\nfunction createClient(config) {\n  const client_ = new Client(config);\n  client = client_;\n  return client_;\n}\nfunction getClient() {\n  if (!client) {\n    throw new Error('No wagmi client found. Ensure you have set up a client: https://wagmi.sh/docs/client');\n  }\n\n  return client;\n}\n\nexport { Client as C, InjectedConnector as I, createStorage as a, createClient as c, getClient as g, noopStorage as n, shimDisconnectKey as s };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}